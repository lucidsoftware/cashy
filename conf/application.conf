# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Make sure to change this
play.http.secret.key="changeme"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

play.filters.csrf.header.bypassHeaders = {
  X-Requested-With = "*"
}

# Disable this if you don't want to automatically synchronize the database with s3
# it can be disabled in an override file with:
# `play.modules.disabled += "com.lucidchart.open.cashy.amazons3.S3SyncModule"`
play.modules.enabled += "com.lucidchart.open.cashy.amazons3.S3SyncModule"

# Allowed Hosts
# ~~~~~~~~~~~~~
# If hosting somewhere other than localhost you will need to configure the domain
# you use in the play.filters.hosts.allowed settings
#
# play.filters.hosts.allowed = ["localhost:9000", "cashy.example.com"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

db.default.driver="com.mysql.cj.jdbc.Driver"
db.default.url="jdbc:mysql://localhost/cashy"
db.default.username="dev"
db.default.password="dev"
db.default.partitionCount="1"
db.default.maxConnectionsPerPartition="10"
db.default.minConnectionsPerPartition="1"
db.default.acquireIncrement="1"
db.default.acquireRetryAttempts="10"
db.default.acquireRetryDelay="100"
db.default.connectionTimeout="100"
db.default.idleMaxAge="300000"
db.default.maxConnectionAge="3600000"
db.default.disableJMX="true"
db.default.idleConnectionTestPeriod="60000"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# Application Context
# ~~~~~
play.http.context = "/"

# Sessions
# ~~~~~
play.http.flash.cookieName = "appflash"

# Authentication
# ~~~~~
auth.cookie.name = "auth"
auth.cookie.path = "/"
#auth.cookie.domain = "localhost"
auth.cookie.secure = "false"
auth.cookie.ttl = "86400"
auth.cookie.remembermeMaxAge = "1209600"

# Mailer
# ~~~~~
mailer.enabled = "true"
mailer.debug = "false"
mailer.smtp.host = "localhost"
mailer.smtp.port = "25"
mailer.smtp.user = ""
mailer.smtp.pass = ""
mailer.fromEmail = "cashy@cashy.com"
# the email of the person who gets alert emails about the state of cashy
mailer.alertEmail = ""

# Google Oauth
# ~~~~~
auth.google.clientId = ""
auth.google.secret = ""
auth.google.oauthEndpoint = "https://accounts.google.com/o/oauth2/auth"
auth.google.tokenEndpoint = "https://www.googleapis.com/oauth2/v3/token"
auth.google.tokenInfoEndpoint = "https://www.googleapis.com/oauth2/v1/tokeninfo"
auth.google.domainWhitelist = ["lucidchart.com"]

# Amazon S3
# ~~~~~
# You can configure a non-default credentials file to load AWS credentials from
# aws.credentialsFile = /etc/aws/dev-credentials
amazon.s3.enabled = true
amazon.s3.bucketUrlMap = {}
# Example:
# This would map the "example" bucket to https://example.com/ (which could
# point to  a CDN such as cloudfront, or a proxy in front of s3):
#
# amazon.s3.bucketUrlMap.example =  "https://example.com/"
amazon.s3.fullAccessUrl = "https://s3.amazonaws.com/"
amazon.s3.cdn.version = "1"
amazon.s3.upload.timeout = 30
amazon.s3.upload.cachetime = 2592000
amazon.s3.listing.maxKeys = 100
amazon.s3.syncFrequency = 86400
amazon.s3.tempUploadPrefix = ".cashy"

upload.minNestedDirectories = 2
upload.extensions = [
  "js",
  "css",
  "jpg",
  "jpeg",
  "png",
  "gif",
  "txt",
  "csv",
  "svg",
  "ico",
  "ttf",
  "otf",
  "woff",
  "woff2",
  "cur",
  "pdf",
  "eps",
  "zip",
  "webm",
  "webp",
  "ogg",
  "wav",
  "mp4",
]
upload.jsExtensions = ["js"]
upload.cssExtensions = ["css"]
upload.imageExtensions = ["jpg", "jpeg", "png", "gif"]
upload.minGzipSavings = .2
upload.jsCompression.enabled = true
upload.cssCompression.enabled = true

# the max number of results to show up in the search feature
search.max = 50

akka.cashysystem {
	akka {
		actor {
			default-dispatcher {
				executor = thread-pool-executor

				thread-pool-executor {
					core-pool-size-min = 8
					core-pool-size-factor = 1.0
					core-pool-size-max = 100
				}
			}
		}
	}
}

# the max number of results to show per page of audits
audit.max = 50

include "overrides.conf"
